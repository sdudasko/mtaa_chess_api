{
    "openapi": "3.0.0",
    "info": {
        "title": "Laravel OpenApi Demo Documentation",
        "description": "L5 Swagger OpenApi description",
        "contact": {
            "email": "admin@admin.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://mtaa_chess_api.test/v1",
            "description": "Demo API Server"
        }
    ],
    "paths": {
        "/login": {
            "post": {
                "tags": [
                    "Login"
                ],
                "summary": "Handle an incoming authentication request.",
                "description": "Logging in the user.",
                "operationId": "login",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "email"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "password"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "Logout"
                ],
                "summary": "Destroy an authenticated session.",
                "description": "Logging out the user.",
                "operationId": "logout",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/reset-password": {
            "post": {
                "tags": [
                    "Password reset"
                ],
                "summary": "Handle an incoming new password request.",
                "description": "Returns 200 if new password was set successfully. ",
                "operationId": "resetPassword",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "token"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "email"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "password"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/forgot-password": {
            "post": {
                "tags": [
                    "Forgot password"
                ],
                "summary": "Handle an incoming password reset link request.",
                "description": "Sending password reset link to the user",
                "operationId": "forgotPassword",
                "parameters": [
                    {
                        "name": "email",
                        "in": "path",
                        "description": "User email",
                        "required": true,
                        "schema": {
                            "type": "email"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/register": {
            "post": {
                "tags": [
                    "Registrations"
                ],
                "summary": "Register a new user",
                "description": "Returns new user data",
                "operationId": "registerUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreTournamentRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreUserRequest"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/tournaments": {
            "get": {
                "tags": [
                    "Tournaments"
                ],
                "summary": "Get list of tournaments",
                "description": "Returns list of tournaments",
                "operationId": "getTournamentsList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TournamentResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Tournaments"
                ],
                "summary": "Store new tournament",
                "description": "Returns tournament data",
                "operationId": "storeTournament",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreTournamentRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tournament"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/tournaments/{id}": {
            "get": {
                "tags": [
                    "Tournaments"
                ],
                "summary": "Get tournament information",
                "description": "Returns tournament data",
                "operationId": "getTournamentById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Tournament id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tournament"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Tournaments"
                ],
                "summary": "Update existing tournament",
                "description": "Returns updated tournament data",
                "operationId": "updateTournament",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Tournament id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTournamentRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tournament"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Tournaments"
                ],
                "summary": "Delete existing tournament",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteTournament",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Tournament id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "StoreTournamentRequest": {
                "title": "Store Tournament request",
                "description": "Store Tournament request body data",
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "StoreUserRequest": {
                "title": "Store User request",
                "description": "Store User request body data",
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "UpdateTournamentRequest": {
                "title": "Update Tournament request",
                "description": "Update Tournament request body data",
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "TournamentResource": {
                "title": "TournamentResource",
                "description": "Tournament resource",
                "xml": {
                    "name": "TournamentResource"
                }
            },
            "Tournament": {
                "title": "Tournament",
                "description": "Tournament model",
                "xml": {
                    "name": "Tournament"
                }
            }
        }
    },
    "tags": [
        {
            "name": "Tournaments",
            "description": "API Endpoints of Tournaments"
        }
    ],
    "security": [
        []
    ]
}