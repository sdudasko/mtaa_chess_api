{
    "openapi": "3.0.0",
    "info": {
        "title": "Laravel OpenApi Demo Documentation",
        "description": "API for chess tournament administration system.",
        "contact": {
            "email": "xdudasko@stuba.sk, xdemeterp@stuba.sk"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://mtaa_chess_api.test/v1",
            "description": "Demo API Server"
        }
    ],
    "paths": {
        "/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Handle an incoming authentication request.",
                "description": "Logging in the user.",
                "operationId": "login",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "email"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "password"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string",
                                            "format": "string",
                                            "example": "..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Destroy an authenticated session.",
                "description": "Logging out the user.",
                "operationId": "logout",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "User id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                }
            }
        },
        "/reset-password": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Handle an incoming new password request.",
                "description": "Returns 200 if new password was set successfully. ",
                "operationId": "resetPassword",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "date",
                                    "tempo"
                                ],
                                "properties": {
                                    "token": {
                                        "type": "string",
                                        "example": "token..."
                                    },
                                    "email": {
                                        "type": "email",
                                        "example": "xuser@stuba.sk"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/forgot-password": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Handle an incoming password reset link request.",
                "description": "Sending password reset link to the user",
                "operationId": "forgotPassword",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "description": "User email",
                        "required": true,
                        "schema": {
                            "type": "email"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new user",
                "description": "Returns new user data",
                "operationId": "registerUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password",
                                    "tempo"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "email",
                                        "example": "xuser@stuba.sk"
                                    },
                                    "password": {
                                        "type": "password",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "201": {
                        "description": "Invalid request body.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user_id": {
                                            "type": "integer",
                                            "example": "1"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid request body.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sorry, invalid request body."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/matches": {
            "get": {
                "tags": [
                    "Matches"
                ],
                "summary": "Get list of matches",
                "description": "Returns list of matches",
                "operationId": "getMatchesList",
                "parameters": [
                    {
                        "name": "round",
                        "in": "query",
                        "description": "Round number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": [
                                    {
                                        "id": 1,
                                        "white": 3,
                                        "black": 8,
                                        "result": null,
                                        "round": 5,
                                        "table": 1,
                                        "created_at": "2021-03-25T11:47:13.000000Z",
                                        "updated_at": "2021-03-25T11:47:13.000000Z"
                                    },
                                    {
                                        "id": 2,
                                        "white": 4,
                                        "black": 9,
                                        "result": 1,
                                        "round": 5,
                                        "table": 2,
                                        "created_at": "2021-03-25T11:47:13.000000Z",
                                        "updated_at": "2021-03-25T11:47:13.000000Z"
                                    },
                                    {
                                        "id": 3,
                                        "table": 3,
                                        "white": 5,
                                        "black": 10,
                                        "result": 2,
                                        "round": 5,
                                        "created_at": "2021-03-25T11:47:13.000000Z",
                                        "updated_at": "2021-03-25T11:47:13.000000Z"
                                    },
                                    {
                                        "id": 4,
                                        "table": 4,
                                        "white": 6,
                                        "black": 11,
                                        "result": 0,
                                        "round": 5,
                                        "created_at": "2021-03-25T11:47:13.000000Z",
                                        "updated_at": "2021-03-25T11:47:13.000000Z"
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "put": {
                "tags": [
                    "Matches"
                ],
                "summary": "Create new round",
                "description": "Returns new round data",
                "operationId": "storeMatch",
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": [
                                    {
                                        "table": 1,
                                        "white": 3,
                                        "black": 8,
                                        "result": null,
                                        "round": 5
                                    },
                                    {
                                        "table": 2,
                                        "white": 4,
                                        "black": 9,
                                        "result": 1,
                                        "round": 5
                                    },
                                    {
                                        "table": 3,
                                        "white": 5,
                                        "black": 10,
                                        "result": 2,
                                        "round": 5
                                    },
                                    {
                                        "table": 4,
                                        "white": 6,
                                        "black": 11,
                                        "result": 0,
                                        "round": 5
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/matches/{id}": {
            "post": {
                "tags": [
                    "Matches"
                ],
                "summary": "Update existing match",
                "description": "Returns updated match data",
                "operationId": "updateMatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Match id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "result",
                        "in": "query",
                        "description": "Match result",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Invalid request body.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sorry, invalid request body."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/matches/exportToPDF/{round}": {
            "get": {
                "tags": [
                    "Matches"
                ],
                "summary": "Export new round to PDF",
                "description": "Stores file to the device.",
                "operationId": "matchesExportToPDF",
                "parameters": [
                    {
                        "name": "round",
                        "in": "path",
                        "description": "Round",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                }
            }
        },
        "/tournaments": {
            "put": {
                "tags": [
                    "Tournaments"
                ],
                "summary": "Store new tournament",
                "description": "Returns tournament data",
                "operationId": "storeTournament",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "date",
                                    "tempo"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Tournament name"
                                    },
                                    "date": {
                                        "type": "datetime",
                                        "format": "YYYY-MM-DD HH:MM:SS",
                                        "example": "2021-05-06 09:00:00"
                                    },
                                    "tempo": {
                                        "type": "integer",
                                        "example": "3"
                                    },
                                    "tempo_increment": {
                                        "type": "integer",
                                        "example": "2"
                                    },
                                    "rounds": {
                                        "type": "integer",
                                        "example": "15"
                                    },
                                    "description": {
                                        "type": "text",
                                        "example": "Description"
                                    },
                                    "image": {
                                        "type": "bytearray",
                                        "example": ""
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tournament"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "422": {
                        "description": "Invalid request body.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sorry, invalid request body."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tournaments/{id}": {
            "get": {
                "tags": [
                    "Tournaments"
                ],
                "summary": "Get tournament information",
                "description": "Returns tournament data",
                "operationId": "getTournamentById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Tournament id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tournament"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Tournaments"
                ],
                "summary": "Overrides existing tournament values.",
                "description": "Returns updated tournament data",
                "operationId": "updateTournament",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Tournament id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Tournament"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tournament"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    },
                    "422": {
                        "description": "Invalid request body.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sorry, invalid request body."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Tournaments"
                ],
                "summary": "Delete existing tournament",
                "description": "Deletes a record and returns no content.",
                "operationId": "deleteTournament",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Tournament id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/tournaments/{hash}": {
            "get": {
                "tags": [
                    "Tournaments"
                ],
                "summary": "Check if the scanned hash is a valid tournament hash.",
                "description": "Returns true if the tournament is active and player can attend it.",
                "operationId": "checkTournamentByHash",
                "parameters": [
                    {
                        "name": "hash",
                        "in": "path",
                        "description": "Tournament hash",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Returns true if the provided tournament hash is valid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "valid": {
                                            "type": "bool",
                                            "example": "true"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/players": {
            "get": {
                "tags": [
                    "Players"
                ],
                "summary": "Get list of players",
                "description": "Returns list of players",
                "operationId": "getPlayersList",
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": [
                                    {
                                        "id": 1,
                                        "name": "Jozef Nový",
                                        "email": "carter.cheyenne@example.com",
                                        "email_verified_at": "2021-03-25T11:47:13.000000Z",
                                        "created_at": "2021-03-25T11:47:13.000000Z",
                                        "updated_at": "2021-03-25T11:47:13.000000Z",
                                        "role_id": "null",
                                        "elo": 2650,
                                        "category": "CH24",
                                        "title": "GM",
                                        "points": "0"
                                    },
                                    {
                                        "id": 2,
                                        "name": "František Starý",
                                        "email": "carter.cheyenne@example.com",
                                        "email_verified_at": "2021-03-25T11:47:13.000000Z",
                                        "created_at": "2021-03-25T11:47:13.000000Z",
                                        "updated_at": "2021-03-25T11:47:13.000000Z",
                                        "role_id": "null",
                                        "elo": 2600,
                                        "category": "CH24",
                                        "title": "GM",
                                        "points": "0"
                                    },
                                    {
                                        "id": 3,
                                        "name": "Samuel Halčin",
                                        "email": "carter.cheyenne@example.com",
                                        "email_verified_at": "2021-03-25T11:47:13.000000Z",
                                        "created_at": "2021-03-25T11:47:13.000000Z",
                                        "updated_at": "2021-03-25T11:47:13.000000Z",
                                        "role_id": "null",
                                        "elo": 2477,
                                        "category": "CH18",
                                        "title": "IM",
                                        "points": "0"
                                    },
                                    {
                                        "id": 3,
                                        "name": "Anna Lizáková",
                                        "email": "carter.cheyenne@example.com",
                                        "email_verified_at": "2021-03-25T11:47:13.000000Z",
                                        "created_at": "2021-03-25T11:47:13.000000Z",
                                        "updated_at": "2021-03-25T11:47:13.000000Z",
                                        "role_id": "null",
                                        "elo": 2311,
                                        "category": "D18",
                                        "title": "FM",
                                        "points": "0"
                                    }
                                ]
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Players"
                ],
                "summary": "Store new player",
                "description": "Returns player data",
                "operationId": "storePlayer",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "František Nový"
                                    },
                                    "elo": {
                                        "type": "integer",
                                        "example": "1000"
                                    },
                                    "category": {
                                        "type": "string",
                                        "example": "CH18"
                                    },
                                    "title": {
                                        "type": "string",
                                        "example": null
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "František Nový"
                                        },
                                        "elo": {
                                            "type": "integer",
                                            "example": "1000"
                                        },
                                        "category": {
                                            "type": "string",
                                            "example": "CH18"
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "null"
                                        },
                                        "created_at": {
                                            "type": "timestamp",
                                            "example": "2021-05-06 09:00:00"
                                        },
                                        "updated_at": {
                                            "type": "timestamp",
                                            "example": "2021-05-06 09:00:00"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                }
            }
        },
        "/players/storeBulk": {
            "put": {
                "tags": [
                    "Players"
                ],
                "summary": "Store list of players",
                "description": "Returns whether operation was successful.",
                "operationId": "storeBulkPlayers",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            },
                            "example": [
                                {
                                    "name": "Jozef Nový",
                                    "elo": 2650,
                                    "title": "GM",
                                    "category": "CH24"
                                },
                                {
                                    "name": "František Starý",
                                    "elo": 2600,
                                    "title": "GM",
                                    "category": "CH24"
                                },
                                {
                                    "name": "Samuel Halčin",
                                    "elo": 2477,
                                    "title": "IM",
                                    "category": "CH18"
                                },
                                {
                                    "name": "Anna Lizáková",
                                    "elo": 2311,
                                    "title": "FM",
                                    "category": "D18"
                                }
                            ]
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "500": {
                        "description": "Something went wrong."
                    }
                }
            }
        },
        "/standings": {
            "get": {
                "tags": [
                    "Standings"
                ],
                "summary": "Get standings",
                "description": "Returns standings after last round if not specified otherwise.",
                "operationId": "getStandings",
                "parameters": [
                    {
                        "name": "group_by_category",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "bool"
                        }
                    },
                    {
                        "name": "round",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": [
                                    {
                                        "id": 1,
                                        "name": "Jozef Nový",
                                        "elo": 2650,
                                        "title": "GM",
                                        "category": "CH24",
                                        "points": 3
                                    },
                                    {
                                        "id": 2,
                                        "name": "František Starý",
                                        "elo": 2600,
                                        "title": "GM",
                                        "category": "CH24",
                                        "points": 2
                                    },
                                    {
                                        "id": 3,
                                        "name": "Samuel Halčin",
                                        "elo": 2477,
                                        "title": "IM",
                                        "category": "CH18",
                                        "points": 5.5
                                    },
                                    {
                                        "id": 3,
                                        "name": "Anna Lizáková",
                                        "elo": 2311,
                                        "title": "FM",
                                        "category": "D18",
                                        "points": 3.5
                                    }
                                ]
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/players/{id}": {
            "get": {
                "tags": [
                    "Players"
                ],
                "summary": "Get player information",
                "description": "Returns player data",
                "operationId": "getPlayerById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Player id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "František Nový"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "example@gmail.com"
                                        },
                                        "email_verified_at": {
                                            "type": "string",
                                            "example": "2021-03-25T17:31:07.000000Z"
                                        },
                                        "created_at": {
                                            "type": "timestamp",
                                            "example": "2021-05-06 09:00:00"
                                        },
                                        "updated_at": {
                                            "type": "timestamp",
                                            "example": "2021-05-06 09:00:00"
                                        },
                                        "role_id": {
                                            "type": "integer",
                                            "example": null
                                        },
                                        "elo": {
                                            "type": "integer",
                                            "example": "1000"
                                        },
                                        "category": {
                                            "type": "string",
                                            "example": "CH20"
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "null"
                                        },
                                        "points": {
                                            "type": "integer",
                                            "example": 9
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                }
            },
            "put": {
                "tags": [
                    "Players"
                ],
                "summary": "Overrides existing player values.",
                "description": "Returns updated player data",
                "operationId": "updatePlayer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Player id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "František Nový"
                                    },
                                    "elo": {
                                        "type": "integer",
                                        "example": "1000"
                                    },
                                    "category": {
                                        "type": "string",
                                        "example": "CH18"
                                    },
                                    "title": {
                                        "type": "string",
                                        "example": "GM"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "František Nový"
                                        },
                                        "elo": {
                                            "type": "integer",
                                            "example": "1000"
                                        },
                                        "category": {
                                            "type": "string",
                                            "example": "CH18"
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "null"
                                        },
                                        "created_at": {
                                            "type": "timestamp",
                                            "example": "2021-05-06 09:00:00"
                                        },
                                        "updated_at": {
                                            "type": "timestamp",
                                            "example": "2021-05-06 09:00:00"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                }
            }
        },
        "/users/checkPlayerId": {
            "post": {
                "tags": [
                    "Players"
                ],
                "summary": "Check if the typed id is a valid player id.",
                "description": "Returns true if the player can attend the tournament.",
                "operationId": "checkPlayerId",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Player id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "hash",
                        "in": "query",
                        "description": "Tournament hash",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Returns true if the player can attend the tournament.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "valid": {
                                            "type": "bool",
                                            "example": "true"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/players/{id}/matches": {
            "get": {
                "tags": [
                    "Players"
                ],
                "summary": "Get list of player's matches. (User with id 2 in the example.)",
                "description": "Returns list of player's matches",
                "operationId": "getPlayerMatches",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Player id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": [
                                    {
                                        "table": 1,
                                        "white": 2,
                                        "black": 8,
                                        "result": 3,
                                        "round": 1
                                    },
                                    {
                                        "table": 2,
                                        "white": 9,
                                        "black": 2,
                                        "result": 1,
                                        "round": 2
                                    },
                                    {
                                        "table": 3,
                                        "white": 2,
                                        "black": 10,
                                        "result": 2,
                                        "round": 3
                                    },
                                    {
                                        "table": 4,
                                        "white": 11,
                                        "black": 2,
                                        "result": 0,
                                        "round": 4
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "StoreMatchRequest": {
                "title": "Store Match request",
                "description": "Store Match request body data",
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "StorePlayerRequest": {
                "title": "Store Player request",
                "description": "Store User request body data",
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "StoreTournamentRequest": {
                "title": "Store Tournament request",
                "description": "Store Tournament request body data",
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "StoreUserRequest": {
                "title": "Store User request",
                "description": "Store User request body data",
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "UpdateMatchRequest": {
                "title": "Update Match request",
                "description": "Update Match request body data",
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "UpdatePlayerRequest": {
                "title": "Update Player request",
                "description": "Update Player request body data",
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "UpdateTournamentRequest": {
                "title": "Update Tournament request",
                "description": "Update Tournament request body data",
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "UpdateUserRequest": {
                "title": "Update User request",
                "description": "Update User request body data",
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "MatchResource": {
                "title": "MatchResource",
                "description": "Match resource",
                "xml": {
                    "name": "MatchResource"
                }
            },
            "TournamentResource": {
                "title": "TournamentResource",
                "description": "Tournament resource",
                "xml": {
                    "name": "TournamentResource"
                }
            },
            "UserResource": {
                "title": "UserResource",
                "description": "User resource",
                "xml": {
                    "name": "UserResource"
                }
            },
            "Match": {
                "title": "Match",
                "description": "Match model",
                "xml": {
                    "name": "Match"
                }
            },
            "Player": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/User"
                    }
                ]
            },
            "Tournament": {
                "title": "Tournament",
                "description": "Tournament model",
                "properties": {
                    "title": {
                        "type": "string",
                        "format": "string",
                        "example": "Tournament name"
                    },
                    "date": {
                        "type": "datetime",
                        "format": "YYYY-MM-DD HH:MM:SS",
                        "example": "2021-05-06 09:00:00"
                    },
                    "tempo": {
                        "type": "integer",
                        "example": "3"
                    },
                    "tempo_increment": {
                        "type": "integer",
                        "example": "2"
                    },
                    "rounds": {
                        "type": "integer",
                        "example": "15"
                    },
                    "description": {
                        "type": "text",
                        "example": "Description"
                    },
                    "image": {
                        "type": "bytearray",
                        "example": ""
                    },
                    "qr_hash": {
                        "type": "string",
                        "example": ""
                    },
                    "created_at": {
                        "type": "timestamp",
                        "example": "2021-05-06 09:00:00"
                    },
                    "updated_at": {
                        "type": "timestamp",
                        "example": "2021-05-06 09:00:00"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Tournament"
                }
            },
            "User": {
                "title": "User",
                "description": "User model",
                "xml": {
                    "name": "User"
                }
            }
        }
    },
    "tags": [
        {
            "name": "Tournaments",
            "description": "API Endpoints of Tournaments"
        }
    ],
    "security": [
        []
    ]
}